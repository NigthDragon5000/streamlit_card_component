{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jair\\\\componentes_react_streamlit\\\\component-template\\\\template\\\\my_component\\\\frontend\\\\src\\\\MyComponent.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport CardBox from './components/CardBox';\n\nclass MyComponent extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      numClicks: 0,\n      isFocused: false\n    };\n\n    this.render = () => {\n      const name = this.props.args[\"name\"];\n      const ks = this.props.args[\"ks\"];\n      const gini = this.props.args[\"gini\"];\n      const variables = this.props.args[\"variables\"];\n      const {\n        theme\n      } = this.props;\n      const style = {};\n\n      if (theme) {\n        const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : \"gray\"}`;\n        style.border = borderStyling;\n        style.outline = borderStyling;\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardBox, {\n        ks: ks,\n        gini: gini,\n        variables: variables,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.onClicked = () => {\n      // Increment state.numClicks, and pass the new value back to\n      // Streamlit via `Streamlit.setComponentValue`.\n      this.setState(prevState => ({\n        numClicks: prevState.numClicks + 3\n      }), () => Streamlit.setComponentValue(this.state.numClicks));\n    };\n\n    this._onFocus = () => {\n      this.setState({\n        isFocused: true\n      });\n    };\n\n    this._onBlur = () => {\n      this.setState({\n        isFocused: false\n      });\n    };\n  }\n\n}\n\nexport default withStreamlitConnection(MyComponent);","map":{"version":3,"sources":["C:/Users/Jair/componentes_react_streamlit/component-template/template/my_component/frontend/src/MyComponent.tsx"],"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","CardBox","MyComponent","state","numClicks","isFocused","render","name","props","args","ks","gini","variables","theme","style","borderStyling","primaryColor","border","outline","onClicked","setState","prevState","setComponentValue","_onFocus","_onBlur"],"mappings":";AAAA,SACEA,SADF,EAEEC,sBAFF,EAGEC,uBAHF,QAIO,yBAJP;AAKA,OAAOC,KAAP,MAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAOA,MAAMC,WAAN,SAA0BJ,sBAA1B,CAAwD;AAAA;AAAA;AAAA,SAC/CK,KAD+C,GACvC;AAAEC,MAAAA,SAAS,EAAE,CAAb;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KADuC;;AAAA,SAG/CC,MAH+C,GAGtC,MAAiB;AAE/B,YAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgB,MAAhB,CAAb;AACA,YAAMC,EAAE,GAAG,KAAKF,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAX;AACA,YAAME,IAAI,GAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgB,MAAhB,CAAb;AACA,YAAMG,SAAS,GAAG,KAAKJ,KAAL,CAAWC,IAAX,CAAgB,WAAhB,CAAlB;AAEA,YAAM;AAAEI,QAAAA;AAAF,UAAY,KAAKL,KAAvB;AACA,YAAMM,KAA0B,GAAG,EAAnC;;AAEA,UAAID,KAAJ,EAAW;AACT,cAAME,aAAa,GAAI,aACrB,KAAKZ,KAAL,CAAWE,SAAX,GAAuBQ,KAAK,CAACG,YAA7B,GAA4C,MAC7C,EAFD;AAGAF,QAAAA,KAAK,CAACG,MAAN,GAAeF,aAAf;AACAD,QAAAA,KAAK,CAACI,OAAN,GAAgBH,aAAhB;AACD;;AAED,0BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,OAAD;AAAU,QAAA,EAAE,EAAEL,EAAd;AAAkB,QAAA,IAAI,EAAEC,IAAxB;AAA8B,QAAA,SAAS,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFF;AAiBD,KAtCqD;;AAAA,SAyC9CO,SAzC8C,GAyClC,MAAY;AAC9B;AACA;AACA,WAAKC,QAAL,CACEC,SAAS,KAAK;AAAEjB,QAAAA,SAAS,EAAEiB,SAAS,CAACjB,SAAV,GAAsB;AAAnC,OAAL,CADX,EAEE,MAAMP,SAAS,CAACyB,iBAAV,CAA4B,KAAKnB,KAAL,CAAWC,SAAvC,CAFR;AAID,KAhDqD;;AAAA,SAmD9CmB,QAnD8C,GAmDnC,MAAY;AAC7B,WAAKH,QAAL,CAAc;AAAEf,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KArDqD;;AAAA,SAwD9CmB,OAxD8C,GAwDpC,MAAY;AAC5B,WAAKJ,QAAL,CAAc;AAAEf,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KA1DqD;AAAA;;AAAA;;AA8DxD,eAAeN,uBAAuB,CAACG,WAAD,CAAtC","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\nimport CardBox from './components/CardBox'\r\n\r\ninterface State {\r\n  numClicks: number\r\n  isFocused: boolean\r\n}\r\n\r\nclass MyComponent extends StreamlitComponentBase<State> {\r\n  public state = { numClicks: 0, isFocused: false }\r\n\r\n  public render = (): ReactNode => {\r\n\r\n    const name = this.props.args[\"name\"]\r\n    const ks = this.props.args[\"ks\"]\r\n    const gini = this.props.args[\"gini\"]\r\n    const variables = this.props.args[\"variables\"]\r\n\r\n    const { theme } = this.props\r\n    const style: React.CSSProperties = {}\r\n\r\n    if (theme) {\r\n      const borderStyling = `1px solid ${\r\n        this.state.isFocused ? theme.primaryColor : \"gray\"\r\n      }`\r\n      style.border = borderStyling\r\n      style.outline = borderStyling\r\n    }\r\n\r\n    return (\r\n\r\n      <span>\r\n      <CardBox  ks={ks} gini={gini} variables={variables} />\r\n        {/*Hello from React, {name}! &nbsp;  \r\n        <button\r\n          style={style}\r\n          onClick={this.onClicked}\r\n          disabled={this.props.disabled}\r\n          onFocus={this._onFocus}\r\n          onBlur={this._onBlur}\r\n        >\r\n          Click Me!\r\n        </button>\r\n        */}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  /** Click handler for our \"Click Me!\" button. */\r\n  private onClicked = (): void => {\r\n    // Increment state.numClicks, and pass the new value back to\r\n    // Streamlit via `Streamlit.setComponentValue`.\r\n    this.setState(\r\n      prevState => ({ numClicks: prevState.numClicks + 3 }),\r\n      () => Streamlit.setComponentValue(this.state.numClicks)\r\n    )\r\n  }\r\n\r\n  /** Focus handler for our \"Click Me!\" button. */\r\n  private _onFocus = (): void => {\r\n    this.setState({ isFocused: true })\r\n  }\r\n\r\n  /** Blur handler for our \"Click Me!\" button. */\r\n  private _onBlur = (): void => {\r\n    this.setState({ isFocused: false })\r\n  }\r\n}\r\n\r\n\r\nexport default withStreamlitConnection(MyComponent)\r\n"]},"metadata":{},"sourceType":"module"}